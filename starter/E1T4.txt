Based on the architecture diagram, and the steps you have taken so far to upload data and access the application web service, identify at least 2 obvious poor practices as it relates to security.  Include justification.

# Poor practice 1
Found: Web Service Instance should be put inside private subnet instead of public subnet.

Reason & Solution: Becasue ALB has SSL termination, using HTTPS connection for ALB; then connect to EC2
instance in private subnet, increase security to protect instances. EC2 instance in private subnet can use NAT gateway
to access internet, but block ingress connection.

# Poor practice 2
Found: EC2 talk to S3 via public internet is bad choice. 

Reason & Solution: We could use VPC endpoint gateway to access S3 to increase the secuirty. No need to via public internet.

# Poor practice 3

Found: The secret precipe S3 bucket is not enable serve-side encyprtion by default.

Reason: We need to store data in a secret way (encyprtion) to prevent un-authorizated access.

# Poor practice 4

Found: Not least-privileged permissions which provide to EC2 instance, current one is

```yml
        
    Statement:
        - Effect: Allow
          Action: 's3:*'
          Resource: '*'
```
Which means application can not only read update & delete recipe in S3 bucket.

Also `Resouces: '*'` means, app user can not only read free recipe but also secret recipe from  secret bucket.

# Poor practice 5

Found: EC2 Security Group

`CidrIp: 0.0.0.0/0` which allow connection from everywhere. Should only allow SG of ALB.


# Pool practoce 6

Using key pair to access server is bad. Session manager is a better choice to access EC2 instance.


# Poor practice 7

S3 should not turn off "Block all public access".